/* Autogenerated file. Do not edit manually. */

/* tslint:disable */

/* eslint-disable */
import type { PromiseOrValue } from "../../common";
import type { Master, MasterInterface } from "../../contracts/Master";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "_ppl",
    outputs: [
      {
        internalType: "contract Person",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "_suns",
    outputs: [
      {
        internalType: "contract Sun",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "_vacs",
    outputs: [
      {
        internalType: "contract Vaccination",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sunAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "num",
        type: "uint256",
      },
    ],
    name: "lookupPerson",
    outputs: [
      {
        internalType: "string",
        name: "personInfo",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sunAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "num",
        type: "uint256",
      },
    ],
    name: "lookupVaccine",
    outputs: [
      {
        internalType: "string",
        name: "tokenUri",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "num",
        type: "uint256",
      },
    ],
    name: "mintPerson",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "num",
        type: "uint256",
      },
    ],
    name: "mintVac",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061001a3361001f565b61006f565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b61070c8061007e6000396000f3fe608060405234801561001057600080fd5b506004361061008e5760003560e01c806302aad9571461009357806322ac96d4146100d9578063407fc82614610102578063715018a6146101225780638da5cb5b1461012c578063ad236b6514610134578063cbaa779314610147578063d32b5c1414610170578063dd5e4bf714610183578063f2fde38b14610196575b600080fd5b6100bc6100a1366004610654565b6002602052600090815260409020546001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b6100bc6100e7366004610654565b6003602052600090815260409020546001600160a01b031681565b61011561011036600461054b565b6101a9565b6040516100d09190610686565b61012a610245565b005b6100bc610259565b61012a610142366004610575565b610268565b6100bc610155366004610654565b6001602052600090815260409020546001600160a01b031681565b61012a61017e366004610575565b6102de565b61011561019136600461054b565b61038e565b61012a6101a4366004610529565b6103e0565b6000818152600160205260409081902054905163c87b56dd60e01b8152600a6004820181905260609290916001600160a01b039091169063c87b56dd9060240160006040518083038186803b15801561020157600080fd5b505afa158015610215573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261023d91908101906105a8565b949350505050565b61024d61045e565b61025760006104bd565b565b6000546001600160a01b031690565b60008181526001602052604090819020549051632851206560e21b81526001600160a01b039091169063a1448194906102a7908690869060040161066d565b600060405180830381600087803b1580156102c157600080fd5b505af11580156102d5573d6000803e3d6000fd5b50505050505050565b60008181526002602052604090819020549051632851206560e21b81526001600160a01b039091169063a14481949061031d908690869060040161066d565b600060405180830381600087803b15801561033757600080fd5b505af115801561034b573d6000803e3d6000fd5b50505060008281526003602052604090819020549051632851206560e21b81526001600160a01b03909116915063a1448194906102a7908690869060040161066d565b600081815260036020526040808220548151635a9b0b8960e01b81529151606093926001600160a01b0390921691635a9b0b899160048083019286929190829003018186803b15801561020157600080fd5b6103e861045e565b6001600160a01b0381166104525760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084015b60405180910390fd5b61045b816104bd565b50565b33610467610259565b6001600160a01b0316146102575760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610449565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80356001600160a01b038116811461052457600080fd5b919050565b60006020828403121561053b57600080fd5b6105448261050d565b9392505050565b6000806040838503121561055e57600080fd5b6105678361050d565b946020939093013593505050565b60008060006060848603121561058a57600080fd5b6105938461050d565b95602085013595506040909401359392505050565b6000602082840312156105ba57600080fd5b81516001600160401b03808211156105d157600080fd5b818401915084601f8301126105e557600080fd5b8151818111156105f7576105f76106e9565b604051601f8201601f19908116603f0116810190838211818310171561061f5761061f6106e9565b8160405282815287602084870101111561063857600080fd5b6106498360208301602088016106b9565b979650505050505050565b60006020828403121561066657600080fd5b5035919050565b6001600160a01b03929092168252602082015260400190565b60208152600082518060208401526106a58160408501602087016106b9565b601f01601f19169190910160400192915050565b60005b838110156106d45781810151838201526020016106bc565b838111156106e3576000848401525b50505050565b634e487b7160e01b600052604160045260246000fdfea164736f6c6343000806000a";

type MasterConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MasterConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Master__factory extends ContractFactory {
  constructor(...args: MasterConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Master> {
    return super.deploy(overrides || {}) as Promise<Master>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Master {
    return super.attach(address) as Master;
  }
  override connect(signer: Signer): Master__factory {
    return super.connect(signer) as Master__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MasterInterface {
    return new utils.Interface(_abi) as MasterInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Master {
    return new Contract(address, _abi, signerOrProvider) as Master;
  }
}
