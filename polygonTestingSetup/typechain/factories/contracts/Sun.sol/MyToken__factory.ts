/* Autogenerated file. Do not edit manually. */

/* tslint:disable */

/* eslint-disable */
import type { PromiseOrValue } from "../../../common";
import type {
  MyToken,
  MyTokenInterface,
} from "../../../contracts/Sun.sol/MyToken";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeMint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "tokenByIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "tokenOfOwnerByIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604080518082018252600781526626bcaa37b5b2b760c91b6020808301918252835180850190945260038452624d544b60e81b9084015281519192916200005c91600091620000eb565b50805162000072906001906020840190620000eb565b5050506200008f620000896200009560201b60201c565b62000099565b620001ce565b3390565b600a80546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b828054620000f99062000191565b90600052602060002090601f0160209004810192826200011d576000855562000168565b82601f106200013857805160ff191683800117855562000168565b8280016001018555821562000168579182015b82811115620001685782518255916020019190600101906200014b565b50620001769291506200017a565b5090565b5b808211156200017657600081556001016200017b565b600181811c90821680620001a657607f821691505b60208210811415620001c857634e487b7160e01b600052602260045260246000fd5b50919050565b61190880620001de6000396000f3fe608060405234801561001057600080fd5b50600436106101075760003560e01c806301ffc9a71461010c57806306fdde0314610134578063081812fc14610149578063095ea7b31461017457806318160ddd1461018957806323b872dd1461019b5780632f745c59146101ae57806342842e0e146101c157806342966c68146101d45780634f6ccce7146101e75780636352211e146101fa57806370a082311461020d578063715018a6146102205780638da5cb5b1461022857806395d89b4114610230578063a144819414610238578063a22cb4651461024b578063b88d4fde1461025e578063c87b56dd14610271578063e985e9c514610284578063f2fde38b14610297575b600080fd5b61011f61011a3660046115ae565b6102aa565b60405190151581526020015b60405180910390f35b61013c6102bb565b60405161012b9190611699565b61015c6101573660046115e8565b61034d565b6040516001600160a01b03909116815260200161012b565b610187610182366004611584565b610374565b005b6008545b60405190815260200161012b565b6101876101a9366004611431565b61048f565b61018d6101bc366004611584565b6104c1565b6101876101cf366004611431565b610557565b6101876101e23660046115e8565b610572565b61018d6101f53660046115e8565b6105a3565b61015c6102083660046115e8565b610636565b61018d61021b3660046113e3565b61066b565b6101876106f1565b61015c610705565b61013c610714565b610187610246366004611584565b610723565b610187610259366004611548565b610739565b61018761026c36600461146d565b610744565b61013c61027f3660046115e8565b61077c565b61011f6102923660046113fe565b6107f0565b6101876102a53660046113e3565b61081e565b60006102b582610894565b92915050565b6060600080546102ca906117ed565b80601f01602080910402602001604051908101604052809291908181526020018280546102f6906117ed565b80156103435780601f1061031857610100808354040283529160200191610343565b820191906000526020600020905b81548152906001019060200180831161032657829003601f168201915b5050505050905090565b6000610358826108b9565b506000908152600460205260409020546001600160a01b031690565b600061037f82610636565b9050806001600160a01b0316836001600160a01b031614156103f25760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b60648201526084015b60405180910390fd5b336001600160a01b038216148061040e575061040e81336107f0565b6104805760405162461bcd60e51b815260206004820152603e60248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60448201527f6b656e206f776e6572206e6f7220617070726f76656420666f7220616c6c000060648201526084016103e9565b61048a83836108de565b505050565b61049a335b8261094c565b6104b65760405162461bcd60e51b81526004016103e990611730565b61048a8383836109ab565b60006104cc8361066b565b821061052e5760405162461bcd60e51b815260206004820152602b60248201527f455243373231456e756d657261626c653a206f776e657220696e646578206f7560448201526a74206f6620626f756e647360a81b60648201526084016103e9565b506001600160a01b03919091166000908152600660209081526040808320938352929052205490565b61048a83838360405180602001604052806000815250610744565b61057b33610494565b6105975760405162461bcd60e51b81526004016103e990611730565b6105a081610b40565b50565b60006105ae60085490565b82106106115760405162461bcd60e51b815260206004820152602c60248201527f455243373231456e756d657261626c653a20676c6f62616c20696e646578206f60448201526b7574206f6620626f756e647360a01b60648201526084016103e9565b6008828154811061062457610624611899565b90600052602060002001549050919050565b6000818152600260205260408120546001600160a01b0316806102b55760405162461bcd60e51b81526004016103e9906116fe565b60006001600160a01b0382166106d55760405162461bcd60e51b815260206004820152602960248201527f4552433732313a2061646472657373207a65726f206973206e6f7420612076616044820152683634b21037bbb732b960b91b60648201526084016103e9565b506001600160a01b031660009081526003602052604090205490565b6106f9610bd5565b6107036000610c34565b565b600a546001600160a01b031690565b6060600180546102ca906117ed565b61072b610bd5565b6107358282610c86565b5050565b610735338383610ca0565b61074e338361094c565b61076a5760405162461bcd60e51b81526004016103e990611730565b61077684848484610d6b565b50505050565b6060610787826108b9565b600061079e60408051602081019091526000815290565b905060008151116107be57604051806020016040528060008152506107e9565b806107c884610d9e565b6040516020016107d992919061162d565b6040516020818303038152906040525b9392505050565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b610826610bd5565b6001600160a01b03811661088b5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016103e9565b6105a081610c34565b60006001600160e01b0319821663780e9d6360e01b14806102b557506102b582610e9b565b6108c281610eeb565b6105a05760405162461bcd60e51b81526004016103e9906116fe565b600081815260046020526040902080546001600160a01b0319166001600160a01b038416908117909155819061091382610636565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b60008061095883610636565b9050806001600160a01b0316846001600160a01b0316148061097f575061097f81856107f0565b806109a35750836001600160a01b03166109988461034d565b6001600160a01b0316145b949350505050565b826001600160a01b03166109be82610636565b6001600160a01b031614610a225760405162461bcd60e51b815260206004820152602560248201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060448201526437bbb732b960d91b60648201526084016103e9565b6001600160a01b038216610a845760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b60648201526084016103e9565b610a8f838383610f08565b610a9a6000826108de565b6001600160a01b0383166000908152600360205260408120805460019290610ac39084906117aa565b90915550506001600160a01b0382166000908152600360205260408120805460019290610af190849061177e565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716916000805160206118dc83398151915291a4505050565b6000610b4b82610636565b9050610b5981600084610f08565b610b646000836108de565b6001600160a01b0381166000908152600360205260408120805460019290610b8d9084906117aa565b909155505060008281526002602052604080822080546001600160a01b0319169055518391906001600160a01b038416906000805160206118dc833981519152908390a45050565b33610bde610705565b6001600160a01b0316146107035760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016103e9565b600a80546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b610735828260405180602001604052806000815250610f13565b816001600160a01b0316836001600160a01b03161415610cfe5760405162461bcd60e51b815260206004820152601960248201527822a9219b99189d1030b8383937bb32903a379031b0b63632b960391b60448201526064016103e9565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b610d768484846109ab565b610d8284848484610f46565b6107765760405162461bcd60e51b81526004016103e9906116ac565b606081610dc25750506040805180820190915260018152600360fc1b602082015290565b8160005b8115610dec5780610dd681611828565b9150610de59050600a83611796565b9150610dc6565b6000816001600160401b03811115610e0657610e066118af565b6040519080825280601f01601f191660200182016040528015610e30576020820181803683370190505b5090505b84156109a357610e456001836117aa565b9150610e52600a86611843565b610e5d90603061177e565b60f81b818381518110610e7257610e72611899565b60200101906001600160f81b031916908160001a905350610e94600a86611796565b9450610e34565b60006001600160e01b031982166380ac58cd60e01b1480610ecc57506001600160e01b03198216635b5e139f60e01b145b806102b557506301ffc9a760e01b6001600160e01b03198316146102b5565b6000908152600260205260409020546001600160a01b0316151590565b61048a838383611053565b610f1d838361110b565b610f2a6000848484610f46565b61048a5760405162461bcd60e51b81526004016103e9906116ac565b60006001600160a01b0384163b1561104857604051630a85bd0160e11b81526001600160a01b0385169063150b7a0290610f8a90339089908890889060040161165c565b602060405180830381600087803b158015610fa457600080fd5b505af1925050508015610fd4575060408051601f3d908101601f19168201909252610fd1918101906115cb565b60015b61102e573d808015611002576040519150601f19603f3d011682016040523d82523d6000602084013e611007565b606091505b5080516110265760405162461bcd60e51b81526004016103e9906116ac565b805181602001fd5b6001600160e01b031916630a85bd0160e11b1490506109a3565b506001949350505050565b6001600160a01b0383166110ae576110a981600880546000838152600960205260408120829055600182018355919091527ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee30155565b6110d1565b816001600160a01b0316836001600160a01b0316146110d1576110d18382611237565b6001600160a01b0382166110e85761048a816112d4565b826001600160a01b0316826001600160a01b03161461048a5761048a8282611383565b6001600160a01b0382166111615760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f206164647265737360448201526064016103e9565b61116a81610eeb565b156111b65760405162461bcd60e51b815260206004820152601c60248201527b115490cdcc8c4e881d1bdad95b88185b1c9958591e481b5a5b9d195960221b60448201526064016103e9565b6111c260008383610f08565b6001600160a01b03821660009081526003602052604081208054600192906111eb90849061177e565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b03861690811790915590518392906000805160206118dc833981519152908290a45050565b600060016112448461066b565b61124e91906117aa565b6000838152600760205260409020549091508082146112a1576001600160a01b03841660009081526006602090815260408083208584528252808320548484528184208190558352600790915290208190555b5060009182526007602090815260408084208490556001600160a01b039094168352600681528383209183525290812055565b6008546000906112e6906001906117aa565b6000838152600960205260408120546008805493945090928490811061130e5761130e611899565b90600052602060002001549050806008838154811061132f5761132f611899565b600091825260208083209091019290925582815260099091526040808220849055858252812055600880548061136757611367611883565b6001900381819060005260206000200160009055905550505050565b600061138e8361066b565b6001600160a01b039093166000908152600660209081526040808320868452825280832085905593825260079052919091209190915550565b80356001600160a01b03811681146113de57600080fd5b919050565b6000602082840312156113f557600080fd5b6107e9826113c7565b6000806040838503121561141157600080fd5b61141a836113c7565b9150611428602084016113c7565b90509250929050565b60008060006060848603121561144657600080fd5b61144f846113c7565b925061145d602085016113c7565b9150604084013590509250925092565b6000806000806080858703121561148357600080fd5b61148c856113c7565b935061149a602086016113c7565b92506040850135915060608501356001600160401b03808211156114bd57600080fd5b818701915087601f8301126114d157600080fd5b8135818111156114e3576114e36118af565b604051601f8201601f19908116603f0116810190838211818310171561150b5761150b6118af565b816040528281528a602084870101111561152457600080fd5b82602086016020830137600060208483010152809550505050505092959194509250565b6000806040838503121561155b57600080fd5b611564836113c7565b91506020830135801515811461157957600080fd5b809150509250929050565b6000806040838503121561159757600080fd5b6115a0836113c7565b946020939093013593505050565b6000602082840312156115c057600080fd5b81356107e9816118c5565b6000602082840312156115dd57600080fd5b81516107e9816118c5565b6000602082840312156115fa57600080fd5b5035919050565b600081518084526116198160208601602086016117c1565b601f01601f19169290920160200192915050565b6000835161163f8184602088016117c1565b8351908301906116538183602088016117c1565b01949350505050565b6001600160a01b038581168252841660208201526040810183905260806060820181905260009061168f90830184611601565b9695505050505050565b6020815260006107e96020830184611601565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b602080825260189082015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b604082015260600190565b6020808252602e908201527f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560408201526d1c881b9bdc88185c1c1c9bdd995960921b606082015260800190565b6000821982111561179157611791611857565b500190565b6000826117a5576117a561186d565b500490565b6000828210156117bc576117bc611857565b500390565b60005b838110156117dc5781810151838201526020016117c4565b838111156107765750506000910152565b600181811c9082168061180157607f821691505b6020821081141561182257634e487b7160e01b600052602260045260246000fd5b50919050565b600060001982141561183c5761183c611857565b5060010190565b6000826118525761185261186d565b500690565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052601260045260246000fd5b634e487b7160e01b600052603160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160e01b0319811681146105a057600080fdfeddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa164736f6c6343000806000a";

type MyTokenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MyTokenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MyToken__factory extends ContractFactory {
  constructor(...args: MyTokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<MyToken> {
    return super.deploy(overrides || {}) as Promise<MyToken>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): MyToken {
    return super.attach(address) as MyToken;
  }
  override connect(signer: Signer): MyToken__factory {
    return super.connect(signer) as MyToken__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MyTokenInterface {
    return new utils.Interface(_abi) as MyTokenInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MyToken {
    return new Contract(address, _abi, signerOrProvider) as MyToken;
  }
}
